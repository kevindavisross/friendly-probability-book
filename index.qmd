# Preface {.unnumbered}

{{< include _r_setup.qmd >}}

{{< include _python_setup.qmd >}}

```{r}
#| echo: false
#| include: false

# Without an R chunk first, it's looking for the Jupyter engine, which I don't seem to have
# 
1 + 1
```



<!--
Add section: Why is the book "friendly"?

words

graphs

simple strategies likes tables, percentages, averages

simulation

Main characters:

-   You!
-   We/us, the author/narrator, we're just here to guide you through the journey
-   Donny
-   Examples
-->

## Why study probability *and simulation*? {.unnumbered}

Why study probability?

-   Probability is the study of uncertainty, and life is uncertain
-   Probability is used in a wide variety of fields, including: [statistics](https://fivethirtyeight.com/features/not-even-scientists-can-easily-explain-p-values/), [physics](https://www.ucdavis.edu/news/does-probability-come-quantum-physics/), [engineering](https://en.wikipedia.org/wiki/Signal_processing), [biology](https://www.ncbi.nlm.nih.gov/pmc/articles/PMC3843941/), [medicine](https://cvi.asm.org/content/cdli/23/4/249.full.pdf), [finance](https://www.marketwatch.com/story/the-4-called-the-last-financial-crisis-heres-what-they-see-causing-the-next-one-2018-09-13), [actuarial science](https://www.ssa.gov/oact/STATS/table4c6.html), [political science](https://projects.fivethirtyeight.com/2016-election-forecast/), [law](https://en.wikipedia.org/wiki/Prosecutor%27s_fallacy), [sports](https://www.numberfire.com/nfl/lists/18685/the-10-biggest-plays-of-super-bowl-lii) , ...
-   Many topics and problems in probability are frequently misunderstood and sometimes counter intuitive, so it's worthwhile to take a careful study
-   "Probabilistic thinking" is an important component of statistical literacy (e.g. how to assess risk when making decisions)
-   Probability provides the foundation for many important statistical concepts and methods such as p-values and confidence intervals

Why use **simulation** to study probability?

-   Many concepts encountered in probability can seem esoteric; simulation helps make them more concrete.
-   Simulation provides an effective tool for analyzing probability models and for exploring effects of changing assumptions
-   Simulation can be used to check analytical solutions
-   Simulation is often the best or only method for investigating many problems which are too complex to solve analytically
-   Simulation allows for *statistical* approaches to solving probability problems (e.g., treat the simulated values as data to summarize and analyze)
-   Simulation-based reasoning is an important component of statistical literacy (e.g., understanding a p-value via simulation)
-   Many statistical procedures employ simulation-based methods (e.g. bootstrapping)

## Learn by doing {.unnumbered}

::: {.callout-note appearance="simple"}
There are many examples in this book.
Examples are used to both motivate new topics and to help you practice your understanding of the material.
You should attempt the examples on your own before reading the solutions.
To encourage you to do so, the solutions have been hidden.
:::

::: {.callout-tip collapse=true}
You can reveal the solution by clicking on the "Solution (click to expand)" button.
::: 




## Don't do what Donny Don't does {.unnumbered}

Some of the examples in this book feature a character named Donny Don't.
The moral of these examples is (usually) "Don't do what Donny Don't does".
(This is a [Simpson's](https://frinkiac.com/video/S05E08/0nvMY69o6o_U7BqeIzQ314al-SQ=.gif) [reference](https://simpsons.fandom.com/wiki/Boy-Scoutz_%27n_the_Hood).)
Donny represents a student who makes many of the mistakes commonly made by students studying probability.
The idea of these problems is for you to learn from the common mistakes that Donny makes, by identifying why he is wrong and by helping him understand and correct his mistakes.
But be careful: sometimes Donny is right!

## Learning objectives

At the completion of this book, you should be able to:

-   Interpret conditional and unconditional probabilities and expected values
-   Identify coherent probability models, events and random variables
-   Apply common probability models in real contexts
-   Design simulation studies to investigate random phenomena
-   Analyze simulation results
-   Solve probability problems using mathematical properties and tools
-   Describe distributions of random variables
-   Construct representations of distributions

## Symbulate {.unnumbered}

This book uses the Python package [Symbulate](https://github.com/dlsun/symbulate) which provides a user friendly framework for conducting simulations involving probability models.
The syntax of Symbulate reflects the "language of probability" and makes it intuitive to specify, run, analyze, and visualize the results of a simulation.
In Symbulate, probability spaces, events, random variables, and random processes are symbolic objects which can be manipulated, independently of their simulated realizations.
Symbulate's consistency with the mathematics of probability reinforces understanding of probabilistic concepts.
The article [@ross2019] discusses Symbulate and its features in more detail.

The best way to interact with Symbulate is through [Google Colab](https://colab.research.google.com/) or [Jupyter](https://jupyter.org/) notebooks.
A notebook is organized by cells which contain text or code that can be run interactively with output displayed after the cell.

Symbulate can be run online in a Colab notebook by including the following line in the first cell.

```{python}
#| eval: false

pip install git+https://github.com/kevindavisross/symbulate
```

Symbulate can also be used in RMarkdown or Quarto documents, if you install the package on your device.
To install Symbulate on your own computer, it is recommended that you first install the [Anaconda distribution](https://www.anaconda.com/distribution/), which is a Python environment with many scientific packages installed (including all of the packages that Symbulate is built on).
After installing Anaconda, you can install Symbulate using the `pip` command above.

You should always include the following command once in each notebook to import Symbulate during a Python session.

```{python}
#| eval: false

from symbulate import *
```


The Symbulate command `plot()` produces graphics.
These graphics can be customized (by changing axis limits, adding titles, legends, etc) using [Matplotlib](https://matplotlib.org/), and in particular the `pyplot` method, which can be imported by including the lines

```{python}
#| eval: false

import matplotlib
import matplotlib.pyplot as plt
```

Colab or Jupyter notebooks provide a natural interface for Symbulate.
The code in this book matches as closely as possible the commands that would be entered into cells in a notebook.
However, certain commands that appear throughout the book are needed only to properly produce the output in this book, and not if working directly in notebooks (e.g., some `print` statements, instances of `plt.figure()` or `plt.show()`)



## About this book {.unnumbered}

This book was created with [Quarto](https://quarto.org/).
